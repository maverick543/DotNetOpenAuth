//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DotNetOpenAuth.Xrds {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class XrdsStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal XrdsStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DotNetOpenAuth.Xrds.XrdsStrings", typeof(XrdsStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An absolute URI is required for this value..
        /// </summary>
        internal static string AbsoluteUriRequired {
            get {
                return ResourceManager.GetString("AbsoluteUriRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested access scope exceeds the grant scope..
        /// </summary>
        internal static string AccessScopeExceedsGrantScope {
            get {
                return ResourceManager.GetString("AccessScopeExceedsGrantScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The access token contains characters that must not appear in the HTTP Authorization header..
        /// </summary>
        internal static string AccessTokenInvalidForHttpAuthorizationHeader {
            get {
                return ResourceManager.GetString("AccessTokenInvalidForHttpAuthorizationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot send access token to Consumer for request token &apos;{0}&apos; before it has been authorized..
        /// </summary>
        internal static string AccessTokenNotAuthorized {
            get {
                return ResourceManager.GetString("AccessTokenNotAuthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Access token has expired and cannot be automatically refreshed..
        /// </summary>
        internal static string AccessTokenRefreshFailed {
            get {
                return ResourceManager.GetString("AccessTokenRefreshFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The access token&apos;s private signing key must be set..
        /// </summary>
        internal static string AccessTokenSigningKeyMissing {
            get {
                return ResourceManager.GetString("AccessTokenSigningKeyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This is already a PPID Identifier..
        /// </summary>
        internal static string ArgumentIsPpidIdentifier {
            get {
                return ResourceManager.GetString("ArgumentIsPpidIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument&apos;s {0}.{1} property is required but is empty or null..
        /// </summary>
        internal static string ArgumentPropertyMissing {
            get {
                return ResourceManager.GetString("ArgumentPropertyMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The requested association type &apos;{0}&apos; with session type &apos;{1}&apos; is unrecognized or not supported by this Provider due to security requirements..
        /// </summary>
        internal static string AssociationOrSessionTypeUnrecognizedOrNotSupported {
            get {
                return ResourceManager.GetString("AssociationOrSessionTypeUnrecognizedOrNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of the shared secret ({0}) does not match the length required by the association type (&apos;{1}&apos;)..
        /// </summary>
        internal static string AssociationSecretAndTypeLengthMismatch {
            get {
                return ResourceManager.GetString("AssociationSecretAndTypeLengthMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The length of the encrypted shared secret ({0}) does not match the length of the hashing algorithm ({1})..
        /// </summary>
        internal static string AssociationSecretHashLengthMismatch {
            get {
                return ResourceManager.GetString("AssociationSecretHashLengthMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No association store has been given but is required for the current configuration..
        /// </summary>
        internal static string AssociationStoreRequired {
            get {
                return ResourceManager.GetString("AssociationStoreRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If an association store is given, a nonce store must also be provided..
        /// </summary>
        internal static string AssociationStoreRequiresNonceStore {
            get {
                return ResourceManager.GetString("AssociationStoreRequiresNonceStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An attribute with type URI &apos;{0}&apos; has already been added..
        /// </summary>
        internal static string AttributeAlreadyAdded {
            get {
                return ResourceManager.GetString("AttributeAlreadyAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only {0} values for attribute &apos;{1}&apos; were requested, but {2} were supplied..
        /// </summary>
        internal static string AttributeTooManyValues {
            get {
                return ResourceManager.GetString("AttributeTooManyValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization has expired..
        /// </summary>
        internal static string AuthorizationExpired {
            get {
                return ResourceManager.GetString("AuthorizationExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected OAuth authorization response received with callback and client state that does not match an expected value..
        /// </summary>
        internal static string AuthorizationResponseUnexpectedMismatch {
            get {
                return ResourceManager.GetString("AuthorizationResponseUnexpectedMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The access token &apos;{0}&apos; is invalid or expired..
        /// </summary>
        internal static string BadAccessTokenInProtectedResourceRequest {
            get {
                return ResourceManager.GetString("BadAccessTokenInProtectedResourceRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The private data supplied does not meet the requirements of any known Association type.  Its length may be too short, or it may have been corrupted..
        /// </summary>
        internal static string BadAssociationPrivateData {
            get {
                return ResourceManager.GetString("BadAssociationPrivateData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} extension failed to deserialize and will be skipped.  {1}.
        /// </summary>
        internal static string BadExtension {
            get {
                return ResourceManager.GetString("BadExtension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one parameter is required for the Bearer scheme in its WWW-Authenticate header..
        /// </summary>
        internal static string BearerTokenUnauthorizedAtLeastOneParameterRequired {
            get {
                return ResourceManager.GetString("BearerTokenUnauthorizedAtLeastOneParameterRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to send all message data because some of it requires multi-part POST, but IMessageWithBinaryData.SendAsMultipart was false..
        /// </summary>
        internal static string BinaryDataRequiresMultipart {
            get {
                return ResourceManager.GetString("BinaryDataRequiresMultipart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Callback arguments are only supported when a {0} is provided to the {1}..
        /// </summary>
        internal static string CallbackArgumentsRequireSecretStore {
            get {
                return ResourceManager.GetString("CallbackArgumentsRequireSecretStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A Simple Registration request can only generate a response on the receiving end..
        /// </summary>
        internal static string CallDeserializeBeforeCreateResponse {
            get {
                return ResourceManager.GetString("CallDeserializeBeforeCreateResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to obtain access token.  Authorization Server reports reason: {0}.
        /// </summary>
        internal static string CannotObtainAccessTokenWithReason {
            get {
                return ResourceManager.GetString("CannotObtainAccessTokenWithReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XRI CanonicalID verification failed..
        /// </summary>
        internal static string CIDVerificationFailed {
            get {
                return ResourceManager.GetString("CIDVerificationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The openid.claimed_id and openid.identity parameters must both be present or both be absent..
        /// </summary>
        internal static string ClaimedIdAndLocalIdMustBothPresentOrAbsent {
            get {
                return ResourceManager.GetString("ClaimedIdAndLocalIdMustBothPresentOrAbsent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ClaimedIdentifier property cannot be set when IsDelegatedIdentifier is true to avoid breaking OpenID URL delegation..
        /// </summary>
        internal static string ClaimedIdentifierCannotBeSetOnDelegatedAuthentication {
            get {
                return ResourceManager.GetString("ClaimedIdentifierCannotBeSetOnDelegatedAuthentication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This OpenID exploits features that this relying party cannot reliably verify.  Please try logging in with a human-readable OpenID or from a different OpenID Provider..
        /// </summary>
        internal static string ClaimedIdentifierDefiesDotNetNormalization {
            get {
                return ResourceManager.GetString("ClaimedIdentifierDefiesDotNetNormalization", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ClaimedIdentifier property must be set first..
        /// </summary>
        internal static string ClaimedIdentifierMustBeSetFirst {
            get {
                return ResourceManager.GetString("ClaimedIdentifierMustBeSetFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The callback URL ({0}) is not allowed for this client..
        /// </summary>
        internal static string ClientCallbackDisallowed {
            get {
                return ResourceManager.GetString("ClientCallbackDisallowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Client Identifier starts with a resource owner prefix.  Authorization aborted..
        /// </summary>
        internal static string ClientIdentifierLooksLikeResourceOwnerName {
            get {
                return ResourceManager.GetString("ClientIdentifierLooksLikeResourceOwnerName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure looking up secret for client or token..
        /// </summary>
        internal static string ClientOrTokenSecretNotFound {
            get {
                return ResourceManager.GetString("ClientOrTokenSecretNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An extension with this property name (&apos;{0}&apos;) has already been registered..
        /// </summary>
        internal static string ClientScriptExtensionPropertyNameCollision {
            get {
                return ResourceManager.GetString("ClientScriptExtensionPropertyNameCollision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extension &apos;{0}&apos; has already been registered..
        /// </summary>
        internal static string ClientScriptExtensionTypeCollision {
            get {
                return ResourceManager.GetString("ClientScriptExtensionTypeCollision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client secret was incorrect..
        /// </summary>
        internal static string ClientSecretMismatch {
            get {
                return ResourceManager.GetString("ClientSecretMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration-specified type {0} must be public, and is not..
        /// </summary>
        internal static string ConfigurationTypeMustBePublic {
            get {
                return ResourceManager.GetString("ConfigurationTypeMustBePublic", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration XAML reference to {0} requires a current HttpContext to resolve..
        /// </summary>
        internal static string ConfigurationXamlReferenceRequiresHttpContext {
            get {
                return ResourceManager.GetString("ConfigurationXamlReferenceRequiresHttpContext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure looking up secret for consumer or token..
        /// </summary>
        internal static string ConsumerOrTokenSecretNotFound {
            get {
                return ResourceManager.GetString("ConsumerOrTokenSecretNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An authentication request has already been created using CreateRequest()..
        /// </summary>
        internal static string CreateRequestAlreadyCalled {
            get {
                return ResourceManager.GetString("CreateRequestAlreadyCalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HttpContext.Current is null.  There must be an ASP.NET request in process for this operation to succeed..
        /// </summary>
        internal static string CurrentHttpContextRequired {
            get {
                return ResourceManager.GetString("CurrentHttpContextRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataContractSerializer could not be initialized on message type {0}.  Is it missing a [DataContract] attribute?.
        /// </summary>
        internal static string DataContractMissingFromMessageType {
            get {
                return ResourceManager.GetString("DataContractMissingFromMessageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DataContractSerializer could not be initialized on message type {0} because the DataContractAttribute.Namespace property is not set..
        /// </summary>
        internal static string DataContractMissingNamespace {
            get {
                return ResourceManager.GetString("DataContractMissingNamespace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decoding failed due to data corruption..
        /// </summary>
        internal static string DataCorruptionDetected {
            get {
                return ResourceManager.GetString("DataCorruptionDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only OpenIDs issued directly by their OpenID Provider are allowed here..
        /// </summary>
        internal static string DelegatingIdentifiersNotAllowed {
            get {
                return ResourceManager.GetString("DelegatingIdentifiersNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web application &apos;{0}&apos; deleted..
        /// </summary>
        internal static string DeletedWebApplication {
            get {
                return ResourceManager.GetString("DeletedWebApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An instance of type {0} was expected, but received unexpected derived type {1}..
        /// </summary>
        internal static string DerivedTypeNotExpected {
            get {
                return ResourceManager.GetString("DerivedTypeNotExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The associate request instance must be a Diffie-Hellman instance..
        /// </summary>
        internal static string DiffieHellmanAssociationRequired {
            get {
                return ResourceManager.GetString("DiffieHellmanAssociationRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following properties must be set before the Diffie-Hellman algorithm can generate a public key: {0}.
        /// </summary>
        internal static string DiffieHellmanRequiredPropertiesNotSet {
            get {
                return ResourceManager.GetString("DiffieHellmanRequiredPropertiesNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The directed message&apos;s Recipient property must not be null..
        /// </summary>
        internal static string DirectedMessageMissingRecipient {
            get {
                return ResourceManager.GetString("DirectedMessageMissingRecipient", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The given set of options is not supported by this web request handler..
        /// </summary>
        internal static string DirectWebRequestOptionsNotSupported {
            get {
                return ResourceManager.GetString("DirectWebRequestOptionsNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current IHttpHandler is not one of types: {0}.  An embedded resource URL provider must be set in your .config file..
        /// </summary>
        internal static string EmbeddedResourceUrlProviderRequired {
            get {
                return ResourceManager.GetString("EmbeddedResourceUrlProviderRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The empty string is not allowed..
        /// </summary>
        internal static string EmptyStringNotAllowed {
            get {
                return ResourceManager.GetString("EmptyStringNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to instantiate the message part encoder/decoder type {0}..
        /// </summary>
        internal static string EncoderInstantiationFailed {
            get {
                return ResourceManager.GetString("EncoderInstantiationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while deserializing message {0}..
        /// </summary>
        internal static string ErrorDeserializingMessage {
            get {
                return ResourceManager.GetString("ErrorDeserializingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error occurred while sending a direct message or getting the response..
        /// </summary>
        internal static string ErrorInRequestReplyMessage {
            get {
                return ResourceManager.GetString("ErrorInRequestReplyMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This exception was not constructed with a root request message that caused it..
        /// </summary>
        internal static string ExceptionNotConstructedForTransit {
            get {
                return ResourceManager.GetString("ExceptionNotConstructedForTransit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This exception must be instantiated with a recipient that will receive the error message, or a direct request message instance that this exception will respond to..
        /// </summary>
        internal static string ExceptionUndeliverable {
            get {
                return ResourceManager.GetString("ExceptionUndeliverable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected {0} message but received no recognizable message..
        /// </summary>
        internal static string ExpectedMessageNotReceived {
            get {
                return ResourceManager.GetString("ExpectedMessageNotReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message part {0} was expected in the {1} message but was not found..
        /// </summary>
        internal static string ExpectedParameterWasMissing {
            get {
                return ResourceManager.GetString("ExpectedParameterWasMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The message expired at {0} and it is now {1}..
        /// </summary>
        internal static string ExpiredMessage {
            get {
                return ResourceManager.GetString("ExpiredMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to URI is not SSL yet requireSslDiscovery is set to true..
        /// </summary>
        internal static string ExplicitHttpUriSuppliedWithSslRequirement {
            get {
                return ResourceManager.GetString("ExplicitHttpUriSuppliedWithSslRequirement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An extension sharing namespace &apos;{0}&apos; has already been added.  Only one extension per namespace is allowed in a given request..
        /// </summary>
        internal static string ExtensionAlreadyAddedWithSameTypeURI {
            get {
                return ResourceManager.GetString("ExtensionAlreadyAddedWithSameTypeURI", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot lookup extension support on a rehydrated ServiceEndpoint..
        /// </summary>
        internal static string ExtensionLookupSupportUnavailable {
            get {
                return ResourceManager.GetString("ExtensionLookupSupportUnavailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to add extra parameter &apos;{0}&apos; with value &apos;{1}&apos;..
        /// </summary>
        internal static string ExtraParameterAddFailure {
            get {
                return ResourceManager.GetString("ExtraParameterAddFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fragment segments do not apply to XRI identifiers..
        /// </summary>
        internal static string FragmentNotAllowedOnXRIs {
            get {
                return ResourceManager.GetString("FragmentNotAllowedOnXRIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The provided data could not be decrypted. If the current application is deployed in a web farm configuration, ensure that the &apos;decryptionKey&apos; and &apos;validationKey&apos; attributes are explicitly specified in the &lt;machineKey&gt; configuration section..
        /// </summary>
        internal static string Generic_CryptoFailure {
            get {
                return ResourceManager.GetString("Generic_CryptoFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one of GET or POST flags must be present..
        /// </summary>
        internal static string GetOrPostFlagsRequired {
            get {
                return ResourceManager.GetString("GetOrPostFlagsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HTML head tag must include runat=&quot;server&quot;..
        /// </summary>
        internal static string HeadTagMustIncludeRunatServer {
            get {
                return ResourceManager.GetString("HeadTagMustIncludeRunatServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HostFactories property must be set first..
        /// </summary>
        internal static string HostFactoriesRequired {
            get {
                return ResourceManager.GetString("HostFactoriesRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This method requires a current HttpContext.  Alternatively, use an overload of this method that allows you to pass in information without an HttpContext..
        /// </summary>
        internal static string HttpContextRequired {
            get {
                return ResourceManager.GetString("HttpContextRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This message can only be sent over HTTPS..
        /// </summary>
        internal static string HttpsRequired {
            get {
                return ResourceManager.GetString("HttpsRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ClaimedIdentifier and LocalIdentifier must be the same when IsIdentifierSelect is true..
        /// </summary>
        internal static string IdentifierSelectRequiresMatchingIdentifiers {
            get {
                return ResourceManager.GetString("IdentifierSelectRequiresMatchingIdentifiers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The openid.identity and openid.claimed_id parameters must either be both present or both absent from the message..
        /// </summary>
        internal static string IdentityAndClaimedIdentifierMustBeBothPresentOrAbsent {
            get {
                return ResourceManager.GetString("IdentityAndClaimedIdentifierMustBeBothPresentOrAbsent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Provider requested association type &apos;{0}&apos; and session type &apos;{1}&apos;, which are not compatible with each other..
        /// </summary>
        internal static string IncompatibleAssociationAndSessionTypes {
            get {
                return ResourceManager.GetString("IncompatibleAssociationAndSessionTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to oauth_verifier argument was incorrect..
        /// </summary>
        internal static string IncorrectVerifier {
            get {
                return ResourceManager.GetString("IncorrectVerifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (Contact: {1}, Reference: {2}).
        /// </summary>
        internal static string IndirectErrorFormattedMessage {
            get {
                return ResourceManager.GetString("IndirectErrorFormattedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Messages that indicate indirect transport must implement the {0} interface..
        /// </summary>
        internal static string IndirectMessagesMustImplementIDirectedProtocolMessage {
            get {
                return ResourceManager.GetString("IndirectMessagesMustImplementIDirectedProtocolMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insecure web request for &apos;{0}&apos; aborted due to security requirements demanding HTTPS..
        /// </summary>
        internal static string InsecureWebRequestWithSslRequired {
            get {
                return ResourceManager.GetString("InsecureWebRequestWithSslRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} message required protections {{{1}}} but the channel could only apply {{{2}}}..
        /// </summary>
        internal static string InsufficientMessageProtection {
            get {
                return ResourceManager.GetString("InsufficientMessageProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid access token..
        /// </summary>
        internal static string InvalidAccessToken {
            get {
                return ResourceManager.GetString("InvalidAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument has an unexpected value..
        /// </summary>
        internal static string InvalidArgument {
            get {
                return ResourceManager.GetString("InvalidArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot encode &apos;{0}&apos; because it contains an illegal character for Key-Value Form encoding.  (line {1}: &apos;{2}&apos;).
        /// </summary>
        internal static string InvalidCharacterInKeyValueFormInput {
            get {
                return ResourceManager.GetString("InvalidCharacterInKeyValueFormInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The customized binding element ordering is invalid..
        /// </summary>
        internal static string InvalidCustomBindingElementOrder {
            get {
                return ResourceManager.GetString("InvalidCustomBindingElementOrder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid XmlDSig signature on XRDS document..
        /// </summary>
        internal static string InvalidDSig {
            get {
                return ResourceManager.GetString("InvalidDSig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid OAuth message received and discarded..
        /// </summary>
        internal static string InvalidIncomingMessage {
            get {
                return ResourceManager.GetString("InvalidIncomingMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot decode Key-Value Form because a line was found without a &apos;{0}&apos; character.  (line {1}: &apos;{2}&apos;).
        /// </summary>
        internal static string InvalidKeyValueFormCharacterMissing {
            get {
                return ResourceManager.GetString("InvalidKeyValueFormCharacterMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some part(s) of the message have invalid values: {0}.
        /// </summary>
        internal static string InvalidMessageParts {
            get {
                return ResourceManager.GetString("InvalidMessageParts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The incoming message had an invalid or missing nonce..
        /// </summary>
        internal static string InvalidNonceReceived {
            get {
                return ResourceManager.GetString("InvalidNonceReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid resource owner password credential..
        /// </summary>
        internal static string InvalidResourceOwnerPasswordCredential {
            get {
                return ResourceManager.GetString("InvalidResourceOwnerPasswordCredential", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scheme must be http or https but was &apos;{0}&apos;..
        /// </summary>
        internal static string InvalidScheme {
            get {
                return ResourceManager.GetString("InvalidScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The scope token &quot;{0}&quot; contains illegal characters or is empty..
        /// </summary>
        internal static string InvalidScopeToken {
            get {
                return ResourceManager.GetString("InvalidScopeToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value &apos;{0}&apos; is not a valid URI..
        /// </summary>
        internal static string InvalidUri {
            get {
                return ResourceManager.GetString("InvalidUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failure parsing XRDS document..
        /// </summary>
        internal static string InvalidXRDSDocument {
            get {
                return ResourceManager.GetString("InvalidXRDSDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Not a recognized XRI format..
        /// </summary>
        internal static string InvalidXri {
            get {
                return ResourceManager.GetString("InvalidXri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The OpenID Provider issued an assertion for an Identifier whose discovery information did not match.  
        ///Assertion endpoint info: 
        ///{0}
        ///Discovered endpoint info:
        ///{1}.
        /// </summary>
        internal static string IssuedAssertionFailsIdentifierDiscovery {
            get {
                return ResourceManager.GetString("IssuedAssertionFailsIdentifierDiscovery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An item with the same key has already been added..
        /// </summary>
        internal static string KeyAlreadyExists {
            get {
                return ResourceManager.GetString("KeyAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list of keys do not match the provided dictionary..
        /// </summary>
        internal static string KeysListAndDictionaryDoNotMatch {
            get {
                return ResourceManager.GetString("KeysListAndDictionaryDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; and &apos;{1}&apos; parameters must both be or not be &apos;{2}&apos;..
        /// </summary>
        internal static string MatchingArgumentsExpected {
            get {
                return ResourceManager.GetString("MatchingArgumentsExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum time allowed to complete authentication has been exceeded.  Please try again..
        /// </summary>
        internal static string MaximumAuthenticationTimeExpired {
            get {
                return ResourceManager.GetString("MaximumAuthenticationTimeExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message too large for a HTTP GET, and HTTP POST is not allowed for this message type..
        /// </summary>
        internal static string MessageExceedsGetSizePostNotAllowed {
            get {
                return ResourceManager.GetString("MessageExceedsGetSizePostNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} message included extra data which is not allowed..
        /// </summary>
        internal static string MessageNotAllowedExtraParameters {
            get {
                return ResourceManager.GetString("MessageNotAllowedExtraParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} message does not support extensions..
        /// </summary>
        internal static string MessageNotExtensible {
            get {
                return ResourceManager.GetString("MessageNotExtensible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value for {0}.{1} on member {1} was expected to derive from {2} but was {3}..
        /// </summary>
        internal static string MessagePartEncoderWrongType {
            get {
                return ResourceManager.GetString("MessagePartEncoderWrongType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while reading message &apos;{0}&apos; parameter &apos;{1}&apos; with value &apos;{2}&apos;..
        /// </summary>
        internal static string MessagePartReadFailure {
            get {
                return ResourceManager.GetString("MessagePartReadFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message parameter &apos;{0}&apos; with value &apos;{1}&apos; failed to base64 decode..
        /// </summary>
        internal static string MessagePartValueBase64DecodingFault {
            get {
                return ResourceManager.GetString("MessagePartValueBase64DecodingFault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while preparing message &apos;{0}&apos; parameter &apos;{1}&apos; for sending..
        /// </summary>
        internal static string MessagePartWriteFailure {
            get {
                return ResourceManager.GetString("MessagePartWriteFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This message has a timestamp of {0}, which is beyond the allowable clock skew for in the future..
        /// </summary>
        internal static string MessageTimestampInFuture {
            get {
                return ResourceManager.GetString("MessageTimestampInFuture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This OAuth service provider requires OAuth consumers to implement OAuth {0}, but this consumer appears to only support {1}..
        /// </summary>
        internal static string MinimumConsumerVersionRequirementNotMet {
            get {
                return ResourceManager.GetString("MinimumConsumerVersionRequirementNotMet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X.509 signing certificate issued to {0}, but a certificate for {1} was expected..
        /// </summary>
        internal static string MisdirectedSigningCertificate {
            get {
                return ResourceManager.GetString("MisdirectedSigningCertificate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} and {1} properties must be set to arrays of equal length..
        /// </summary>
        internal static string MismatchingArrayLengths {
            get {
                return ResourceManager.GetString("MismatchingArrayLengths", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing access token..
        /// </summary>
        internal static string MissingAccessToken {
            get {
                return ResourceManager.GetString("MissingAccessToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XRDS document for XRI {0} is missing the required CanonicalID element..
        /// </summary>
        internal static string MissingCanonicalIDElement {
            get {
                return ResourceManager.GetString("MissingCanonicalIDElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing decryption key for bucket &quot;{0}&quot; handle &quot;{1}&quot;.
        /// </summary>
        internal static string MissingDecryptionKeyForHandle {
            get {
                return ResourceManager.GetString("MissingDecryptionKeyForHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing {0} element..
        /// </summary>
        internal static string MissingElement {
            get {
                return ResourceManager.GetString("MissingElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot send OAuth message as multipart POST without an authorization HTTP header because sensitive data would not be signed..
        /// </summary>
        internal static string MultipartPostMustBeUsedWithAuthHeader {
            get {
                return ResourceManager.GetString("MultipartPostMustBeUsedWithAuthHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No recognized association type matches the requested length of {0}..
        /// </summary>
        internal static string NoAssociationTypeFoundByLength {
            get {
                return ResourceManager.GetString("NoAssociationTypeFoundByLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No recognized association type matches the requested name of &apos;{0}&apos;..
        /// </summary>
        internal static string NoAssociationTypeFoundByName {
            get {
                return ResourceManager.GetString("NoAssociationTypeFoundByName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No callback URI was available for this request..
        /// </summary>
        internal static string NoCallback {
            get {
                return ResourceManager.GetString("NoCallback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unless using transport layer encryption, &quot;no-encryption&quot; MUST NOT be used..
        /// </summary>
        internal static string NoEncryptionSessionRequiresHttps {
            get {
                return ResourceManager.GetString("NoEncryptionSessionRequiresHttps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refresh tokens should not be granted without the request including an access grant..
        /// </summary>
        internal static string NoGrantNoRefreshToken {
            get {
                return ResourceManager.GetString("NoGrantNoRefreshToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No identifier has been set..
        /// </summary>
        internal static string NoIdentifierSet {
            get {
                return ResourceManager.GetString("NoIdentifierSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No web site with the name &apos;{0}&apos; found..
        /// </summary>
        internal static string NoMatchingWebSiteFound {
            get {
                return ResourceManager.GetString("NoMatchingWebSiteFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A non-empty string was expected..
        /// </summary>
        internal static string NonEmptyStringExpected {
            get {
                return ResourceManager.GetString("NonEmptyStringExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No XRDS document containing OpenID relying party endpoint information could be found at {0}..
        /// </summary>
        internal static string NoRelyingPartyEndpointDiscovered {
            get {
                return ResourceManager.GetString("NoRelyingPartyEndpointDiscovered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Diffie-Hellman session type &apos;{0}&apos; not found for OpenID {1}..
        /// </summary>
        internal static string NoSessionTypeFound {
            get {
                return ResourceManager.GetString("NoSessionTypeFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is not supported by serialized authentication responses.  Try this operation from the LoggedIn event handler..
        /// </summary>
        internal static string NotSupportedByAuthenticationSnapshot {
            get {
                return ResourceManager.GetString("NotSupportedByAuthenticationSnapshot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No OpenID endpoint found..
        /// </summary>
        internal static string OpenIdEndpointNotFound {
            get {
                return ResourceManager.GetString("OpenIdEndpointNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use of the OpenID+OAuth extension requires that the token manager in use implement the {0} interface..
        /// </summary>
        internal static string OpenIdOAuthExtensionRequiresSpecialTokenManagerInterface {
            get {
                return ResourceManager.GetString("OpenIdOAuthExtensionRequiresSpecialTokenManagerInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The OpenID Relying Party&apos;s realm is not recognized as belonging to the OAuth Consumer identified by the consumer key given..
        /// </summary>
        internal static string OpenIdOAuthRealmConsumerKeyDoNotMatch {
            get {
                return ResourceManager.GetString("OpenIdOAuthRealmConsumerKeyDoNotMatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No OpenID url is provided..
        /// </summary>
        internal static string OpenIdTextBoxEmpty {
            get {
                return ResourceManager.GetString("OpenIdTextBoxEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation is only allowed when IAuthenticationResponse.State == AuthenticationStatus.SetupRequired..
        /// </summary>
        internal static string OperationOnlyValidForSetupRequiredState {
            get {
                return ResourceManager.GetString("OperationOnlyValidForSetupRequiredState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Packing javascript resource &quot;{0}&quot; into &quot;{1}&quot;..
        /// </summary>
        internal static string PackingJsFile {
            get {
                return ResourceManager.GetString("PackingJsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The PAPE request has an incomplete set of authentication policies..
        /// </summary>
        internal static string PapeRequestMissingRequiredPolicies {
            get {
                return ResourceManager.GetString("PapeRequestMissingRequiredPolicies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A PAPE response is missing or is missing required policies..
        /// </summary>
        internal static string PapeResponseOrRequiredPoliciesMissing {
            get {
                return ResourceManager.GetString("PapeResponseOrRequiredPoliciesMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; parameter contains the illegal character &apos;{1}&apos;..
        /// </summary>
        internal static string ParameterContainsIllegalCharacters {
            get {
                return ResourceManager.GetString("ParameterContainsIllegalCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No personally identifiable information should be included in authentication responses when the PAPE authentication policy http://www.idmanagement.gov/schema/2009/05/icam/no-pii.pdf is present..
        /// </summary>
        internal static string PiiIncludedWithNoPiiPolicy {
            get {
                return ResourceManager.GetString("PiiIncludedWithNoPiiPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No personally identifiable information should be requested when the http://www.idmanagement.gov/schema/2009/05/icam/no-pii.pdf PAPE policy is present..
        /// </summary>
        internal static string PiiRequestedWithNoPiiPolicy {
            get {
                return ResourceManager.GetString("PiiRequestedWithNoPiiPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to OpenID popup window or iframe did not recognize an OpenID response in the request..
        /// </summary>
        internal static string PopupRedirectMissingResponse {
            get {
                return ResourceManager.GetString("PopupRedirectMissingResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An positive OpenID assertion was received from OP endpoint {0} and was rejected based on this site&apos;s security settings..
        /// </summary>
        internal static string PositiveAssertionFromNonQualifiedProvider {
            get {
                return ResourceManager.GetString("PositiveAssertionFromNonQualifiedProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No PPID provider has been configured..
        /// </summary>
        internal static string PpidProviderNotGiven {
            get {
                return ResourceManager.GetString("PpidProviderNotGiven", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to find the signing secret by the handle &apos;{0}&apos;..
        /// </summary>
        internal static string PrivateRPSecretNotFound {
            get {
                return ResourceManager.GetString("PrivateRPSecretNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} property must be set first..
        /// </summary>
        internal static string PropertyNotSet {
            get {
                return ResourceManager.GetString("PropertyNotSet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This property value is not supported by this control..
        /// </summary>
        internal static string PropertyValueNotSupported {
            get {
                return ResourceManager.GetString("PropertyValueNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to determine the version of the OpenID protocol implemented by the Provider at endpoint &apos;{0}&apos;..
        /// </summary>
        internal static string ProviderVersionUnrecognized {
            get {
                return ResourceManager.GetString("ProviderVersionUnrecognized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A message response is already queued for sending in the response stream..
        /// </summary>
        internal static string QueuedMessageResponseAlreadyExists {
            get {
                return ResourceManager.GetString("QueuedMessageResponseAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An HTTP request to the realm URL ({0}) resulted in a redirect, which is not allowed during relying party discovery..
        /// </summary>
        internal static string RealmCausedRedirectUponDiscovery {
            get {
                return ResourceManager.GetString("RealmCausedRedirectUponDiscovery", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Discovery on the Realm URL MUST be performed before sending a positive assertion..
        /// </summary>
        internal static string RealmDiscoveryNotPerformed {
            get {
                return ResourceManager.GetString("RealmDiscoveryNotPerformed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Realm in an authentication request must be an HTTPS URL..
        /// </summary>
        internal static string RealmMustBeHttps {
            get {
                return ResourceManager.GetString("RealmMustBeHttps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request message type {0} should not be responded to with a refresh token..
        /// </summary>
        internal static string RefreshTokenInappropriateForRequestType {
            get {
                return ResourceManager.GetString("RefreshTokenInappropriateForRequestType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This message has already been processed.  This could indicate a replay attack in progress..
        /// </summary>
        internal static string ReplayAttackDetected {
            get {
                return ResourceManager.GetString("ReplayAttackDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This channel does not support replay protection..
        /// </summary>
        internal static string ReplayProtectionNotSupported {
            get {
                return ResourceManager.GetString("ReplayProtectionNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request URL query MUST NOT contain any OAuth Protocol Parameters..
        /// </summary>
        internal static string RequestUrlMustNotHaveOAuthParameters {
            get {
                return ResourceManager.GetString("RequestUrlMustNotHaveOAuthParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following message parts had constant value requirements that were unsatisfied: {0}.
        /// </summary>
        internal static string RequiredMessagePartConstantIncorrect {
            get {
                return ResourceManager.GetString("RequiredMessagePartConstantIncorrect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following required non-empty parameters were empty in the {0} message: {1}.
        /// </summary>
        internal static string RequiredNonEmptyParameterWasEmpty {
            get {
                return ResourceManager.GetString("RequiredNonEmptyParameterWasEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following required parameters were missing from the {0} message: {1}.
        /// </summary>
        internal static string RequiredParametersMissing {
            get {
                return ResourceManager.GetString("RequiredParametersMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property {0} must be set before this operation is allowed..
        /// </summary>
        internal static string RequiredPropertyNotYetPreset {
            get {
                return ResourceManager.GetString("RequiredPropertyNotYetPreset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The binding element offering the {0} protection requires other protection that is not provided..
        /// </summary>
        internal static string RequiredProtectionMissing {
            get {
                return ResourceManager.GetString("RequiredProtectionMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry.  This site only accepts OpenIDs that are HTTPS-secured, but {0} is not a secure Identifier..
        /// </summary>
        internal static string RequireSslNotSatisfiedByAssertedClaimedId {
            get {
                return ResourceManager.GetString("RequireSslNotSatisfiedByAssertedClaimedId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resource owner username starts with a client prefix.  Authorization aborted..
        /// </summary>
        internal static string ResourceOwnerNameLooksLikeClientIdentifier {
            get {
                return ResourceManager.GetString("ResourceOwnerNameLooksLikeClientIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This object contains a response body, which is not supported..
        /// </summary>
        internal static string ResponseBodyNotSupported {
            get {
                return ResourceManager.GetString("ResponseBodyNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response is not ready.  Use IsResponseReady to check whether a response is ready first..
        /// </summary>
        internal static string ResponseNotReady {
            get {
                return ResourceManager.GetString("ResponseNotReady", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The return value of {0}.{1} should never be null..
        /// </summary>
        internal static string ResultShouldNotBeNull {
            get {
                return ResourceManager.GetString("ResultShouldNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to return_to &apos;{0}&apos; not under realm &apos;{1}&apos;..
        /// </summary>
        internal static string ReturnToNotUnderRealm {
            get {
                return ResourceManager.GetString("ReturnToNotUnderRealm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} parameter ({1}) does not match the actual URL ({2}) the request was made with..
        /// </summary>
        internal static string ReturnToParamDoesNotMatchRequestUrl {
            get {
                return ResourceManager.GetString("ReturnToParamDoesNotMatchRequestUrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ReturnTo property must not be null to support this operation..
        /// </summary>
        internal static string ReturnToRequiredForOperation {
            get {
                return ResourceManager.GetString("ReturnToRequiredForOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The openid.return_to parameter is required in the request message in order to construct a response, but that parameter was missing..
        /// </summary>
        internal static string ReturnToRequiredForResponse {
            get {
                return ResourceManager.GetString("ReturnToRequiredForResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Individual scopes may not contain spaces..
        /// </summary>
        internal static string ScopesMayNotContainSpaces {
            get {
                return ResourceManager.GetString("ScopesMayNotContainSpaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list is empty..
        /// </summary>
        internal static string SequenceContainsNoElements {
            get {
                return ResourceManager.GetString("SequenceContainsNoElements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The list contains a null element..
        /// </summary>
        internal static string SequenceContainsNullElement {
            get {
                return ResourceManager.GetString("SequenceContainsNullElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An HttpContext.Current.Session object is required..
        /// </summary>
        internal static string SessionRequired {
            get {
                return ResourceManager.GetString("SessionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following parameter(s) are not included in the signature but must be: {0}.
        /// </summary>
        internal static string SignatureDoesNotIncludeMandatoryParts {
            get {
                return ResourceManager.GetString("SignatureDoesNotIncludeMandatoryParts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message signature was incorrect..
        /// </summary>
        internal static string SignatureInvalid {
            get {
                return ResourceManager.GetString("SignatureInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The signing element already has been associated with a channel..
        /// </summary>
        internal static string SigningElementAlreadyAssociatedWithChannel {
            get {
                return ResourceManager.GetString("SigningElementAlreadyAssociatedWithChannel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All signing elements must offer the same message protection..
        /// </summary>
        internal static string SigningElementsMustShareSameProtection {
            get {
                return ResourceManager.GetString("SigningElementsMustShareSameProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This channel does not support signing messages.  To support signing messages, a derived Channel type must override the Sign and IsSignatureValid methods..
        /// </summary>
        internal static string SigningNotSupported {
            get {
                return ResourceManager.GetString("SigningNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skip packing &quot;{0}&quot; because its packed version is up to date..
        /// </summary>
        internal static string SkipPackingJsFile {
            get {
                return ResourceManager.GetString("SkipPackingJsFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid birthdate value.  Must be in the form yyyy-MM-dd..
        /// </summary>
        internal static string SregInvalidBirthdate {
            get {
                return ResourceManager.GetString("SregInvalidBirthdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This message factory does not support message type(s): {0}.
        /// </summary>
        internal static string StandardMessageFactoryUnsupportedMessageType {
            get {
                return ResourceManager.GetString("StandardMessageFactoryUnsupportedMessageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No current HttpContext was detected, so an {0} instance must be explicitly provided or specified in the .config file.  Call the constructor overload that takes an {0}..
        /// </summary>
        internal static string StoreRequiredWhenNoHttpContextAvailable {
            get {
                return ResourceManager.GetString("StoreRequiredWhenNoHttpContextAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream must have a known length..
        /// </summary>
        internal static string StreamMustHaveKnownLength {
            get {
                return ResourceManager.GetString("StreamMustHaveKnownLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream&apos;s CanRead property returned false..
        /// </summary>
        internal static string StreamUnreadable {
            get {
                return ResourceManager.GetString("StreamUnreadable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The stream&apos;s CanWrite property returned false..
        /// </summary>
        internal static string StreamUnwritable {
            get {
                return ResourceManager.GetString("StreamUnwritable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Authorization Server&apos;s token endpoint generated error {0}: &apos;{1}&apos;.
        /// </summary>
        internal static string TokenEndpointErrorFormat {
            get {
                return ResourceManager.GetString("TokenEndpointErrorFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A token in the message was not recognized by the service provider..
        /// </summary>
        internal static string TokenNotFound {
            get {
                return ResourceManager.GetString("TokenNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected at most 1 binding element to apply the {0} protection, but more than one applied..
        /// </summary>
        internal static string TooManyBindingsOfferingSameProtection {
            get {
                return ResourceManager.GetString("TooManyBindingsOfferingSameProtection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The maximum allowable number of redirects were exceeded while requesting &apos;{0}&apos;..
        /// </summary>
        internal static string TooManyRedirects {
            get {
                return ResourceManager.GetString("TooManyRedirects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type must implement {0}..
        /// </summary>
        internal static string TypeMustImplementX {
            get {
                return ResourceManager.GetString("TypeMustImplementX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected buffer length..
        /// </summary>
        internal static string UnexpectedBufferLength {
            get {
                return ResourceManager.GetString("UnexpectedBufferLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The array must not be empty..
        /// </summary>
        internal static string UnexpectedEmptyArray {
            get {
                return ResourceManager.GetString("UnexpectedEmptyArray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The empty string is not allowed..
        /// </summary>
        internal static string UnexpectedEmptyString {
            get {
                return ResourceManager.GetString("UnexpectedEmptyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property {0} had unexpected value {1}..
        /// </summary>
        internal static string UnexpectedEnumPropertyValue {
            get {
                return ResourceManager.GetString("UnexpectedEnumPropertyValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected HTTP status code {0} {1} received in direct response..
        /// </summary>
        internal static string UnexpectedHttpStatusCode {
            get {
                return ResourceManager.GetString("UnexpectedHttpStatusCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Message parameter &apos;{0}&apos; had unexpected value &apos;{1}&apos;..
        /// </summary>
        internal static string UnexpectedMessagePartValue {
            get {
                return ResourceManager.GetString("UnexpectedMessagePartValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected message {0} parameter &apos;{1}&apos; to have value &apos;{2}&apos; but had &apos;{3}&apos; instead..
        /// </summary>
        internal static string UnexpectedMessagePartValueForConstant {
            get {
                return ResourceManager.GetString("UnexpectedMessagePartValueForConstant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expected message {0} but received {1} instead..
        /// </summary>
        internal static string UnexpectedMessageReceived {
            get {
                return ResourceManager.GetString("UnexpectedMessageReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected message type received..
        /// </summary>
        internal static string UnexpectedMessageReceivedOfMany {
            get {
                return ResourceManager.GetString("UnexpectedMessageReceivedOfMany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A null key was included and is not allowed..
        /// </summary>
        internal static string UnexpectedNullKey {
            get {
                return ResourceManager.GetString("UnexpectedNullKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A null or empty key was included and is not allowed..
        /// </summary>
        internal static string UnexpectedNullOrEmptyKey {
            get {
                return ResourceManager.GetString("UnexpectedNullOrEmptyKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A null value was included for key &apos;{0}&apos; and is not allowed..
        /// </summary>
        internal static string UnexpectedNullValue {
            get {
                return ResourceManager.GetString("UnexpectedNullValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected response Content-Type {0}.
        /// </summary>
        internal static string UnexpectedResponseContentType {
            get {
                return ResourceManager.GetString("UnexpectedResponseContentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type {0} or a derived type was expected, but {1} was given..
        /// </summary>
        internal static string UnexpectedType {
            get {
                return ResourceManager.GetString("UnexpectedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} property has unrecognized value {1}..
        /// </summary>
        internal static string UnrecognizedEnumValue {
            get {
                return ResourceManager.GetString("UnrecognizedEnumValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The URL &apos;{0}&apos; is rated unsafe and cannot be requested this way..
        /// </summary>
        internal static string UnsafeWebRequestDetected {
            get {
                return ResourceManager.GetString("UnsafeWebRequestDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unsolicited assertion cannot be sent for the claimed identifier {0} because this is not an authorized Provider for that identifier..
        /// </summary>
        internal static string UnsolicitedAssertionForUnrelatedClaimedIdentifier {
            get {
                return ResourceManager.GetString("UnsolicitedAssertionForUnrelatedClaimedIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rejecting unsolicited assertions requires a nonce store and an association store..
        /// </summary>
        internal static string UnsolicitedAssertionRejectionRequiresNonceStore {
            get {
                return ResourceManager.GetString("UnsolicitedAssertionRejectionRequiresNonceStore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsolicited assertions are not allowed at this relying party..
        /// </summary>
        internal static string UnsolicitedAssertionsNotAllowed {
            get {
                return ResourceManager.GetString("UnsolicitedAssertionsNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsolicited assertions are not allowed from 1.0 OpenID Providers..
        /// </summary>
        internal static string UnsolicitedAssertionsNotAllowedFrom1xOPs {
            get {
                return ResourceManager.GetString("UnsolicitedAssertionsNotAllowedFrom1xOPs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Providing a DateTime whose Kind is Unspecified is not allowed..
        /// </summary>
        internal static string UnspecifiedDateTimeKindNotAllowed {
            get {
                return ResourceManager.GetString("UnspecifiedDateTimeKindNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized or missing canonicalization method..
        /// </summary>
        internal static string UnsupportedCanonicalizationMethod {
            get {
                return ResourceManager.GetString("UnsupportedCanonicalizationMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature is unavailable due to an unrecognized channel configuration..
        /// </summary>
        internal static string UnsupportedChannelConfiguration {
            get {
                return ResourceManager.GetString("UnsupportedChannelConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This blob is not a recognized encryption format..
        /// </summary>
        internal static string UnsupportedEncryptionAlgorithm {
            get {
                return ResourceManager.GetString("UnsupportedEncryptionAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The HTTP verb &apos;{0}&apos; is unrecognized and unsupported..
        /// </summary>
        internal static string UnsupportedHttpVerb {
            get {
                return ResourceManager.GetString("UnsupportedHttpVerb", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; messages cannot be received with HTTP verb &apos;{1}&apos;..
        /// </summary>
        internal static string UnsupportedHttpVerbForMessageType {
            get {
                return ResourceManager.GetString("UnsupportedHttpVerbForMessageType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unrecognized or missing signature method..
        /// </summary>
        internal static string UnsupportedSignatureMethod {
            get {
                return ResourceManager.GetString("UnsupportedSignatureMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Redirects on POST requests that are to untrusted servers is not supported..
        /// </summary>
        internal static string UntrustedRedirectsOnPOSTNotSupported {
            get {
                return ResourceManager.GetString("UntrustedRedirectsOnPOSTNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The openid.user_setup_url parameter is required when sending negative assertion messages in response to immediate mode requests..
        /// </summary>
        internal static string UserSetupUrlRequiredInImmediateNegativeResponse {
            get {
                return ResourceManager.GetString("UserSetupUrlRequiredInImmediateNegativeResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web application &apos;{0}&apos; was not found, so it was not deleted..
        /// </summary>
        internal static string WebApplicationNotFoundSoNotDeleted {
            get {
                return ResourceManager.GetString("WebApplicationNotFoundSoNotDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web request to &apos;{0}&apos; failed..
        /// </summary>
        internal static string WebRequestFailed {
            get {
                return ResourceManager.GetString("WebRequestFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The RSA-SHA1 signing binding element has not been set with a certificate for signing..
        /// </summary>
        internal static string X509CertificateNotProvidedForSigning {
            get {
                return ResourceManager.GetString("X509CertificateNotProvidedForSigning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The X.509 certificate used to sign this document is not trusted..
        /// </summary>
        internal static string X509CertificateNotTrusted {
            get {
                return ResourceManager.GetString("X509CertificateNotTrusted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XRI support has been disabled at this site..
        /// </summary>
        internal static string XriResolutionDisabled {
            get {
                return ResourceManager.GetString("XriResolutionDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XRI resolution failed..
        /// </summary>
        internal static string XriResolutionFailed {
            get {
                return ResourceManager.GetString("XriResolutionFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not find XRI resolution Status tag or code attribute was invalid..
        /// </summary>
        internal static string XriResolutionStatusMissing {
            get {
                return ResourceManager.GetString("XriResolutionStatusMissing", resourceCulture);
            }
        }
    }
}
